######## diameter of Binary tree ########
-> definition
    diameter of tree is the longest path between any two node in tree
    this path does not need to pass from root

    Example 

        1
       / \
      2   3
     / \
    4   5

    so  4->2 = 1 or 5->2 = 1
        2->1 = 1 + 1 = 2
        1->3 = 1 + 1 + 1 = 3 
        so diameter is 3

        1
       / \
      2   3
         / \
        4   7
       /     \
      5       8
     /         \
    6           9

    so 6->5->4->3->7->8->9 = diameter = 6

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxdiameter = 0;
    int height(TreeNode* node){
        if(node == NULL){
            return 0;
        }
        int left = height(node->left);
        int right = height(node->right);
        maxdiameter = max(maxdiameter, left + right);
        return 1 + max(left, right);
    }
    int diameterOfBinaryTree(TreeNode* root) {
        height(root);
        return maxdiameter;
    }
};